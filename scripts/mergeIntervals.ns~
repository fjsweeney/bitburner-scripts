export function mergeInterval(arr){
    if(arr.length<=1){
        return arr;
    }
    arr = arr.sort((a,b) => {return a[0]-b[0];});
    let result = [];
    let currentInterval = arr.shift();
    for(let i = 0; i < arr.length; i++){
        if(arr[i][0]<=currentInterval[1]){
            if(arr[i][1]>currentInterval[1]){
                currentInterval[1] = arr[i][1];
            }
        } else {
            result.push(currentInterval);
            currentInterval = arr[i];
        }
    }
    result.push(currentInterval);
    return result;
}
export function solve (ns, contract, server){
    return mergeInterval(ns.codingcontract.getData(contract,server));
}
export async function main(ns) {
    ns.tprint(
        ns.codingcontract.attempt(
            solve(ns,ns.args[0],ns.args[1]),
        ns.args[0],ns.args[1],{"returnReward":true})
    );
}